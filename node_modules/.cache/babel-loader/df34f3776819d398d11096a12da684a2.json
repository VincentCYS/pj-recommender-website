{"ast":null,"code":"import _slicedToArray from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vincentchan/Documents/GitHub/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincentchan/Documents/GitHub/online-shop/src/Components/ProductList/ProductList.js\";\nimport React, { Component } from \"react\";\nimport Item from \"../Item/Item\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport queryString from \"query-string\";\nimport Api from \"../../Api\";\nimport Paging from \"../Paging/Paging\";\nimport ProductsHeader from \"../ProductsHeader/ProductsHeader\";\nimport API from '../../helpers/api.js'; // A lot of the state of this components lives in the URL (query string):\n// for instance whether to use price filter, which products\n// to search for etc. The URL is checked initially and on subsequent changes.\n// Child components of this component also use the query string.\n\nvar ProductList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductList, _Component);\n\n  function ProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ProductList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductList).call(this, props));\n    _this.state = {\n      loading: false,\n      totalItemsCount: null,\n      items: []\n    };\n    _this.updateQueryString = _this.updateQueryString.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProductList, [{\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var qsAsObject, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                qsAsObject = queryString.parse(this.props.location.search); // Make the request to get items\n\n                _context.next = 4;\n                return Api.searchItems(_objectSpread({}, qsAsObject, {\n                  usePriceFilter: qsAsObject.usePriceFilter === \"true\"\n                }));\n\n              case 4:\n                results = _context.sent;\n                console.log(results); // Store results in state\n\n                this.setState({\n                  items: results.data,\n                  loading: false,\n                  totalItemsCount: results.totalLength\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"updateQueryString\",\n    value: function updateQueryString(newValues) {\n      var currentQS = queryString.parse(this.props.location.search); // Create new query string by merging with old one\n\n      var newQS = _objectSpread({}, currentQS, newValues);\n\n      this.props.history.push(\"/?\" + queryString.stringify(newQS));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var currentQS = queryString.parse(this.props.location.search);\n      var oldQS = queryString.parse(prevProps.location.search); // Check if the query strings changed.\n\n      var check1 = Object.entries(currentQS).some(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            k = _ref2[0],\n            v = _ref2[1];\n\n        return v !== oldQS[k];\n      });\n      var check2 = Object.entries(oldQS).some(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            k = _ref4[0],\n            v = _ref4[1];\n\n        return v !== currentQS[k];\n      });\n      var isDifferent = check1 || check2; // We will refetch products only when query string changes.\n\n      if (isDifferent) {\n        this.fetchData();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Obtain query string as an object\n      var parsedQS = queryString.parse(this.props.location.search); // Check if products are loading ...\n\n      if (this.state.loading) {\n        return React.createElement(CircularProgress, {\n          className: \"circular\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(ProductsHeader, {\n        parsedQS: parsedQS,\n        updateQueryString: this.updateQueryString,\n        totalItemsCount: this.state.totalItemsCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.items.map(function (item) {\n        return React.createElement(Item, {\n          key: item.id,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n      })), React.createElement(Paging, {\n        parsedQS: parsedQS,\n        updateQueryString: this.updateQueryString,\n        totalItemsCount: this.state.totalItemsCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProductList;\n}(Component);\n\nexport default ProductList;","map":{"version":3,"sources":["/Users/vincentchan/Documents/GitHub/online-shop/src/Components/ProductList/ProductList.js"],"names":["React","Component","Item","CircularProgress","queryString","Api","Paging","ProductsHeader","API","ProductList","props","state","loading","totalItemsCount","items","updateQueryString","bind","setState","qsAsObject","parse","location","search","searchItems","usePriceFilter","results","console","log","data","totalLength","fetchData","newValues","currentQS","newQS","history","push","stringify","prevProps","prevState","snapshot","oldQS","check1","Object","entries","some","k","v","check2","isDifferent","parsedQS","height","display","flexDirection","flex","map","item","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Item from \"../Item/Item\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport queryString from \"query-string\";\nimport Api from \"../../Api\";\nimport Paging from \"../Paging/Paging\";\nimport ProductsHeader from \"../ProductsHeader/ProductsHeader\"\nimport API from '../../helpers/api.js'\n\n// A lot of the state of this components lives in the URL (query string):\n// for instance whether to use price filter, which products\n// to search for etc. The URL is checked initially and on subsequent changes.\n// Child components of this component also use the query string.\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      totalItemsCount: null,\n      items: []\n    };\n    this.updateQueryString = this.updateQueryString.bind(this);\n\n  }\n\n  async fetchData() {\n\n    this.setState({ loading: true });\n\n    let qsAsObject = queryString.parse(this.props.location.search);\n    \n    // Make the request to get items\n    let results = await Api.searchItems({ ...qsAsObject, usePriceFilter: qsAsObject.usePriceFilter === \"true\" });\nconsole.log(results);\n\n    // Store results in state\n    this.setState({\n      items: results.data,\n      loading: false,\n      totalItemsCount: results.totalLength\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  updateQueryString(newValues) {\n    let currentQS = queryString.parse(this.props.location.search);\n    \n    // Create new query string by merging with old one\n    let newQS = { ...currentQS, ...newValues };\n    \n    this.props.history.push(\"/?\" + queryString.stringify(newQS));\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    let currentQS = queryString.parse(this.props.location.search);\n    let oldQS = queryString.parse(prevProps.location.search)\n\n    // Check if the query strings changed.\n    let check1 = Object.entries(currentQS).some(([k, v]) => v !== oldQS[k]);\n    let check2 = Object.entries(oldQS).some(([k, v]) => v !== currentQS[k]);\n    let isDifferent = check1 || check2;\n\n    // We will refetch products only when query string changes.\n    if (isDifferent) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    // Obtain query string as an object\n    let parsedQS = queryString.parse(this.props.location.search);\n\n    // Check if products are loading ...\n    if (this.state.loading) {\n      return (\n        <CircularProgress className=\"circular\" />\n      );\n    }\n\n    return (\n      <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n        <ProductsHeader\n          parsedQS={parsedQS}\n          updateQueryString={this.updateQueryString}\n          totalItemsCount={this.state.totalItemsCount} />\n\n        <div style={{ flex: 1 }}>\n          {this.state.items.map(item => {\n            return <Item key={item.id} item={item} />;\n          })}\n        </div>\n\n        <Paging\n          parsedQS={parsedQS}\n          updateQueryString={this.updateQueryString}\n          totalItemsCount={this.state.totalItemsCount}\n        />\n      </div >\n    );\n  }\n}\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}