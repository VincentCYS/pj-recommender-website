{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/ActivityIndicator.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar DURATION = 2400;\n\nvar ActivityIndicator = function (_React$Component) {\n  (0, _inherits2.default)(ActivityIndicator, _React$Component);\n\n  function ActivityIndicator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ActivityIndicator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ActivityIndicator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      timer: new _reactNative.Animated.Value(0),\n      fade: new _reactNative.Animated.Value(!_this.props.animating && _this.props.hidesWhenStopped ? 0 : 1)\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rotation\", undefined);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"startRotation\", function () {\n      var _this$state = _this.state,\n          fade = _this$state.fade,\n          timer = _this$state.timer;\n      var scale = _this.props.theme.animation.scale;\n\n      _reactNative.Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 1,\n        isInteraction: false,\n        useNativeDriver: true\n      }).start();\n\n      if (_this.rotation) {\n        timer.setValue(0);\n\n        _reactNative.Animated.loop(_this.rotation).start();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"stopRotation\", function () {\n      if (_this.rotation) {\n        _this.rotation.stop();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(ActivityIndicator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var animating = this.props.animating;\n      var timer = this.state.timer;\n      this.rotation = _reactNative.Animated.timing(timer, {\n        duration: DURATION,\n        easing: _reactNative.Easing.linear,\n        useNativeDriver: _reactNative.Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n\n      if (animating) {\n        this.startRotation();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          animating = _this$props.animating,\n          hidesWhenStopped = _this$props.hidesWhenStopped,\n          scale = _this$props.theme.animation.scale;\n      var fade = this.state.fade;\n\n      if (animating !== prevProps.animating) {\n        if (animating) {\n          this.startRotation();\n        } else if (hidesWhenStopped) {\n          _reactNative.Animated.timing(fade, {\n            duration: 200 * scale,\n            toValue: 0,\n            useNativeDriver: true,\n            isInteraction: false\n          }).start(this.stopRotation.bind(this));\n        } else {\n          this.stopRotation();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          fade = _this$state2.fade,\n          timer = _this$state2.timer;\n      var _this$props2 = this.props,\n          animating = _this$props2.animating,\n          indicatorColor = _this$props2.color,\n          hidesWhenStopped = _this$props2.hidesWhenStopped,\n          indicatorSize = _this$props2.size,\n          style = _this$props2.style,\n          theme = _this$props2.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props2, [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"]);\n      var color = indicatorColor || theme.colors.primary;\n      var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n      var frames = 60 * DURATION / 1000;\n\n      var easing = _reactNative.Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\n      var containerStyle = {\n        width: size,\n        height: size / 2,\n        overflow: 'hidden'\n      };\n      return React.createElement(_reactNative.View, (0, _extends2.default)({\n        style: [styles.container, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      }), React.createElement(_reactNative.Animated.View, {\n        style: [{\n          width: size,\n          height: size,\n          opacity: fade\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      }, [0, 1].map(function (index) {\n        var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n          return frameIndex / (frames - 1);\n        });\n        var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n          var progress = 2 * frameIndex / (frames - 1);\n          var rotation = index ? +(360 - 15) : -(180 - 15);\n\n          if (progress > 1.0) {\n            progress = 2.0 - progress;\n          }\n\n          var direction = index ? -1 : +1;\n          return \"\".concat(direction * (180 - 30) * easing(progress) + rotation, \"deg\");\n        });\n        var layerStyle = {\n          width: size,\n          height: size,\n          transform: [{\n            rotate: timer.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"\".concat(0 + 30 + 15, \"deg\"), \"\".concat(2 * 360 + 30 + 15, \"deg\")]\n            })\n          }]\n        };\n        var viewportStyle = {\n          width: size,\n          height: size,\n          transform: [{\n            translateY: index ? -size / 2 : 0\n          }, {\n            rotate: timer.interpolate({\n              inputRange: inputRange,\n              outputRange: outputRange\n            })\n          }]\n        };\n        var offsetStyle = index ? {\n          top: size / 2\n        } : null;\n        var lineStyle = {\n          width: size,\n          height: size,\n          borderColor: color,\n          borderWidth: size / 10,\n          borderRadius: size / 2\n        };\n        return React.createElement(_reactNative.Animated.View, {\n          key: index,\n          style: [styles.layer],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: layerStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: [containerStyle, offsetStyle],\n          collapsable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: viewportStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: containerStyle,\n          collapsable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: lineStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          }\n        }))))));\n      })));\n    }\n  }]);\n  return ActivityIndicator;\n}(React.Component);\n\n(0, _defineProperty2.default)(ActivityIndicator, \"defaultProps\", {\n  animating: true,\n  size: 'small',\n  hidesWhenStopped: true\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\n\nvar _default = (0, _theming.withTheme)(ActivityIndicator);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}