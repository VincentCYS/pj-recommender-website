{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CheckboxItem = exports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Checkbox = _interopRequireDefault(require(\"./Checkbox\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Checkbox/CheckboxItem.tsx\";\n\nvar CheckboxItem = function (_React$Component) {\n  (0, _inherits2.default)(CheckboxItem, _React$Component);\n\n  function CheckboxItem() {\n    (0, _classCallCheck2.default)(this, CheckboxItem);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CheckboxItem).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(CheckboxItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          status = _this$props.status,\n          label = _this$props.label,\n          onPress = _this$props.onPress,\n          labelStyle = _this$props.labelStyle,\n          colors = _this$props.theme.colors,\n          props = (0, _objectWithoutProperties2.default)(_this$props, [\"style\", \"status\", \"label\", \"onPress\", \"labelStyle\", \"theme\"]);\n      return React.createElement(_TouchableRipple.default, {\n        onPress: onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, React.createElement(_reactNative.View, {\n        style: [styles.container, style],\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, React.createElement(_Text.default, {\n        style: [styles.label, labelStyle, {\n          color: colors.primary\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }, label), React.createElement(_Checkbox.default, (0, _extends2.default)({\n        status: status\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }))));\n    }\n  }]);\n  return CheckboxItem;\n}(React.Component);\n\nexports.CheckboxItem = CheckboxItem;\n(0, _defineProperty2.default)(CheckboxItem, \"displayName\", 'Checkbox.Item');\n\nvar _default = (0, _theming.withTheme)(CheckboxItem);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    fontSize: 16\n  }\n});","map":null,"metadata":{},"sourceType":"script"}