{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Modal = _interopRequireDefault(require(\"../Modal\"));\n\nvar _DialogContent = _interopRequireDefault(require(\"./DialogContent\"));\n\nvar _DialogActions = _interopRequireDefault(require(\"./DialogActions\"));\n\nvar _DialogTitle2 = _interopRequireDefault(require(\"./DialogTitle\"));\n\nvar _DialogScrollArea = _interopRequireDefault(require(\"./DialogScrollArea\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Dialog/Dialog.tsx\";\n\nvar Dialog = function (_React$Component) {\n  (0, _inherits2.default)(Dialog, _React$Component);\n\n  function Dialog() {\n    (0, _classCallCheck2.default)(this, Dialog);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Dialog).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(Dialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          dismissable = _this$props.dismissable,\n          onDismiss = _this$props.onDismiss,\n          visible = _this$props.visible,\n          style = _this$props.style,\n          theme = _this$props.theme;\n      return React.createElement(_Modal.default, {\n        dismissable: dismissable,\n        onDismiss: onDismiss,\n        visible: visible,\n        contentContainerStyle: [{\n          borderRadius: theme.roundness,\n          backgroundColor: theme.colors.surface\n        }, styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      }, React.Children.toArray(children).filter(function (child) {\n        return child != null && typeof child !== 'boolean';\n      }).map(function (child, i) {\n        if (i === 0 && React.isValidElement(child) && child.type === _DialogContent.default) {\n          return React.cloneElement(child, {\n            style: [{\n              paddingTop: 24\n            }, child.props.style]\n          });\n        }\n\n        return child;\n      }));\n    }\n  }]);\n  return Dialog;\n}(React.Component);\n\n(0, _defineProperty2.default)(Dialog, \"Content\", _DialogContent.default);\n(0, _defineProperty2.default)(Dialog, \"Actions\", _DialogActions.default);\n(0, _defineProperty2.default)(Dialog, \"Title\", _DialogTitle2.default);\n(0, _defineProperty2.default)(Dialog, \"ScrollArea\", _DialogScrollArea.default);\n(0, _defineProperty2.default)(Dialog, \"defaultProps\", {\n  dismissable: true,\n  visible: false\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginVertical: _reactNative.Platform.OS === 'android' ? 44 : 0,\n    marginHorizontal: 26,\n    elevation: 24,\n    justifyContent: 'flex-start'\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Dialog);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}