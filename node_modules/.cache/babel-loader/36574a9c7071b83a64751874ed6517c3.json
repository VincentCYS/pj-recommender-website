{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/ProgressBar.tsx\";\nvar INDETERMINATE_DURATION = 2000;\nvar INDETERMINATE_MAX_WIDTH = 0.6;\nvar isRTL = _reactNative.I18nManager.isRTL;\n\nvar ProgressBar = function (_React$Component) {\n  (0, _inherits2.default)(ProgressBar, _React$Component);\n\n  function ProgressBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ProgressBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ProgressBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      width: 0,\n      timer: new _reactNative.Animated.Value(0),\n      fade: new _reactNative.Animated.Value(0)\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"indeterminateAnimation\", null);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onLayout\", function (event) {\n      var visible = _this.props.visible;\n      var previousWidth = _this.state.width;\n\n      _this.setState({\n        width: event.nativeEvent.layout.width\n      }, function () {\n        if (visible && previousWidth === 0) {\n          _this.startAnimation();\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"startAnimation\", function () {\n      var _this$props = _this.props,\n          indeterminate = _this$props.indeterminate,\n          progress = _this$props.progress,\n          scale = _this$props.theme.animation.scale;\n      var _this$state = _this.state,\n          fade = _this$state.fade,\n          timer = _this$state.timer;\n\n      _reactNative.Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 1,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n\n      if (indeterminate) {\n        if (!_this.indeterminateAnimation) {\n          _this.indeterminateAnimation = _reactNative.Animated.timing(timer, {\n            duration: INDETERMINATE_DURATION,\n            toValue: 1,\n            useNativeDriver: _reactNative.Platform.OS !== 'web',\n            isInteraction: false\n          });\n        }\n\n        timer.setValue(0);\n\n        _reactNative.Animated.loop(_this.indeterminateAnimation).start();\n      } else {\n        _reactNative.Animated.timing(timer, {\n          duration: 200 * scale,\n          toValue: progress ? progress : 0,\n          useNativeDriver: true,\n          isInteraction: false\n        }).start();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"stopAnimation\", function () {\n      var fade = _this.state.fade;\n      var scale = _this.props.theme.animation.scale;\n\n      if (_this.indeterminateAnimation) {\n        _this.indeterminateAnimation.stop();\n      }\n\n      _reactNative.Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(ProgressBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          visible = _this$props2.visible,\n          progress = _this$props2.progress;\n\n      if (progress !== prevProps.progress || visible !== prevProps.visible) {\n        if (visible) {\n          this.startAnimation();\n        } else {\n          this.stopAnimation();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          color = _this$props3.color,\n          indeterminate = _this$props3.indeterminate,\n          style = _this$props3.style,\n          theme = _this$props3.theme,\n          progress = _this$props3.progress,\n          visible = _this$props3.visible,\n          rest = (0, _objectWithoutProperties2.default)(_this$props3, [\"color\", \"indeterminate\", \"style\", \"theme\", \"progress\", \"visible\"]);\n      var _this$state2 = this.state,\n          fade = _this$state2.fade,\n          timer = _this$state2.timer,\n          width = _this$state2.width;\n      var tintColor = color || theme.colors.primary;\n      var trackTintColor = (0, _color.default)(tintColor).alpha(0.38).rgb().string();\n      return React.createElement(_reactNative.View, (0, _extends2.default)({\n        onLayout: this.onLayout\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }), React.createElement(_reactNative.Animated.View, {\n        style: [styles.container, {\n          backgroundColor: trackTintColor,\n          opacity: fade\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        }\n      }, React.createElement(_reactNative.Animated.View, {\n        style: [styles.progressBar, {\n          backgroundColor: tintColor,\n          width: width,\n          transform: [{\n            translateX: timer.interpolate(indeterminate ? {\n              inputRange: [0, 0.5, 1],\n              outputRange: [(isRTL ? 1 : -1) * 0.5 * width, (isRTL ? 1 : -1) * 0.5 * INDETERMINATE_MAX_WIDTH * width, (isRTL ? -1 : 1) * 0.7 * width]\n            } : {\n              inputRange: [0, 1],\n              outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0]\n            })\n          }, {\n            scaleX: timer.interpolate(indeterminate ? {\n              inputRange: [0, 0.5, 1],\n              outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]\n            } : {\n              inputRange: [0, 1],\n              outputRange: [0.0001, 1]\n            })\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        }\n      })));\n    }\n  }]);\n  return ProgressBar;\n}(React.Component);\n\n(0, _defineProperty2.default)(ProgressBar, \"defaultProps\", {\n  visible: true,\n  progress: 0\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    flex: 1\n  }\n});\n\nvar _default = (0, _theming.withTheme)(ProgressBar);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}