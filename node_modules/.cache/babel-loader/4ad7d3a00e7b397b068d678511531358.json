{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RadioButtonIOS = exports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _RadioButtonGroup = require(\"./RadioButtonGroup\");\n\nvar _utils = require(\"./utils\");\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/RadioButton/RadioButtonIOS.tsx\";\n\nvar RadioButtonIOS = function (_React$Component) {\n  (0, _inherits2.default)(RadioButtonIOS, _React$Component);\n\n  function RadioButtonIOS() {\n    (0, _classCallCheck2.default)(this, RadioButtonIOS);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RadioButtonIOS).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(RadioButtonIOS, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          status = _this$props.status,\n          value = _this$props.value,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"disabled\", \"onPress\", \"theme\", \"status\", \"value\"]);\n      var checkedColor = disabled ? theme.colors.disabled : this.props.color || theme.colors.accent;\n      var rippleColor;\n\n      if (disabled) {\n        rippleColor = (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();\n      } else {\n        rippleColor = (0, _color.default)(checkedColor).fade(0.32).rgb().string();\n      }\n\n      return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, function (context) {\n        var checked = (0, _utils.isChecked)({\n          contextValue: context === null || context === void 0 ? void 0 : context.value,\n          status: status,\n          value: value\n        }) === 'checked';\n        return React.createElement(_TouchableRipple.default, (0, _extends2.default)({}, rest, {\n          borderless: true,\n          rippleColor: rippleColor,\n          onPress: disabled ? undefined : function () {\n            (0, _utils.handlePress)({\n              onPress: onPress,\n              value: value,\n              onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange\n            });\n          },\n          accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n          accessibilityComponentType: checked ? 'radiobutton_checked' : 'radiobutton_unchecked',\n          accessibilityRole: \"button\",\n          accessibilityStates: disabled ? ['disabled'] : [],\n          accessibilityLiveRegion: \"polite\",\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          }\n        }), React.createElement(_reactNative.View, {\n          style: {\n            opacity: checked ? 1 : 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          }\n        }, React.createElement(_MaterialCommunityIcon.default, {\n          allowFontScaling: false,\n          name: \"check\",\n          size: 24,\n          color: checkedColor,\n          direction: _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          }\n        })));\n      });\n    }\n  }]);\n  return RadioButtonIOS;\n}(React.Component);\n\nexports.RadioButtonIOS = RadioButtonIOS;\n(0, _defineProperty2.default)(RadioButtonIOS, \"displayName\", 'RadioButton.IOS');\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\n\nvar _default = (0, _theming.withTheme)(RadioButtonIOS);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}