{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FABGroup = exports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _FAB = _interopRequireDefault(require(\"./FAB\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _Card = _interopRequireDefault(require(\"../Card/Card\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/FAB/FABGroup.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar FABGroup = function (_React$Component) {\n  (0, _inherits2.default)(FABGroup, _React$Component);\n\n  function FABGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FABGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(FABGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      backdrop: new _reactNative.Animated.Value(0),\n      animations: []\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"close\", function () {\n      return _this.props.onStateChange({\n        open: false\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"toggle\", function () {\n      return _this.props.onStateChange({\n        open: !_this.props.open\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(FABGroup, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.open === prevProps.open) {\n        return;\n      }\n\n      var scale = this.props.theme.animation.scale;\n\n      if (this.props.open) {\n        _reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true\n        }), _reactNative.Animated.stagger(50 * scale, this.state.animations.map(function (animation) {\n          return _reactNative.Animated.timing(animation, {\n            toValue: 1,\n            duration: 150 * scale,\n            useNativeDriver: true\n          });\n        }).reverse())]).start();\n      } else {\n        _reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true\n        })].concat((0, _toConsumableArray2.default)(this.state.animations.map(function (animation) {\n          return _reactNative.Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true\n          });\n        })))).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          icon = _this$props.icon,\n          open = _this$props.open,\n          _onPress = _this$props.onPress,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          fabStyle = _this$props.fabStyle,\n          visible = _this$props.visible,\n          testID = _this$props.testID;\n      var colors = theme.colors;\n      var labelColor = theme.dark ? colors.text : (0, _color.default)(colors.text).fade(0.54).rgb().string();\n      var backdropOpacity = open ? this.state.backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1]\n      }) : this.state.backdrop;\n      var opacities = this.state.animations;\n      var scales = opacities.map(function (opacity) {\n        return open ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1]\n        }) : 1;\n      });\n      return React.createElement(_reactNative.View, {\n        pointerEvents: \"box-none\",\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        }\n      }, React.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        }\n      }, React.createElement(_reactNative.Animated.View, {\n        pointerEvents: open ? 'auto' : 'none',\n        style: [styles.backdrop, {\n          opacity: backdropOpacity,\n          backgroundColor: colors.backdrop\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        }\n      })), React.createElement(_reactNative.SafeAreaView, {\n        pointerEvents: \"box-none\",\n        style: styles.safeArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        }\n      }, React.createElement(_reactNative.View, {\n        pointerEvents: open ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }, actions.map(function (it, i) {\n        return React.createElement(_reactNative.View, {\n          key: i,\n          style: styles.item,\n          pointerEvents: open ? 'box-none' : 'none',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          }\n        }, it.label && React.createElement(_Card.default, {\n          style: [styles.label, {\n            transform: [{\n              scale: scales[i]\n            }],\n            opacity: opacities[i]\n          }],\n          onPress: function onPress() {\n            it.onPress();\n\n            _this2.close();\n          },\n          accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          }\n        }, React.createElement(_Text.default, {\n          style: {\n            color: labelColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          }\n        }, it.label)), React.createElement(_FAB.default, {\n          small: true,\n          icon: it.icon,\n          color: it.color,\n          style: [{\n            transform: [{\n              scale: scales[i]\n            }],\n            opacity: opacities[i],\n            backgroundColor: theme.colors.surface\n          }, it.style],\n          onPress: function onPress() {\n            it.onPress();\n\n            _this2.close();\n          },\n          accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          testID: it.testID,\n          visible: open,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          }\n        }));\n      })), React.createElement(_FAB.default, {\n        onPress: function onPress() {\n          _onPress === null || _onPress === void 0 ? void 0 : _onPress();\n\n          _this2.toggle();\n        },\n        icon: icon,\n        color: this.props.color,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: \"button\",\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        style: [styles.fab, fabStyle],\n        visible: visible,\n        testID: testID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        animations: nextProps.actions.map(function (_, i) {\n          return prevState.animations[i] || new _reactNative.Animated.Value(nextProps.open ? 1 : 0);\n        })\n      };\n    }\n  }]);\n  return FABGroup;\n}(React.Component);\n\nexports.FABGroup = FABGroup;\n(0, _defineProperty2.default)(FABGroup, \"displayName\", 'FAB.Group');\n\nvar _default = (0, _theming.withTheme)(FABGroup);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject),\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":null,"metadata":{},"sourceType":"script"}