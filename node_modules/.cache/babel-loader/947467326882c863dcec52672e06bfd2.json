{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/TouchableRipple/index.tsx\";\n\nvar TouchableRipple = function (_React$Component) {\n  (0, _inherits2.default)(TouchableRipple, _React$Component);\n\n  function TouchableRipple() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TouchableRipple);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TouchableRipple)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handlePressIn\", function (e) {\n      var _this$props = _this.props,\n          centered = _this$props.centered,\n          rippleColor = _this$props.rippleColor,\n          onPressIn = _this$props.onPressIn,\n          theme = _this$props.theme;\n      onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n      var dark = theme.dark,\n          colors = theme.colors;\n      var calculatedRippleColor = rippleColor || (0, _color.default)(colors.text).alpha(dark ? 0.32 : 0.2).rgb().string();\n      var button = e.currentTarget;\n      var style = window.getComputedStyle(button);\n      var dimensions = button.getBoundingClientRect();\n      var touchX;\n      var touchY;\n\n      if (centered) {\n        touchX = dimensions.width / 2;\n        touchY = dimensions.height / 2;\n      } else {\n        var startX = e.nativeEvent.touches ? e.nativeEvent.touches[0].pageX : e.pageX;\n        var startY = e.nativeEvent.touches ? e.nativeEvent.touches[0].pageY : e.pageY;\n        touchX = startX - dimensions.left;\n        touchY = startY - dimensions.top;\n      }\n\n      var size = centered ? Math.min(dimensions.width, dimensions.height) * 1.25 : Math.max(dimensions.width, dimensions.height) * 2;\n      var container = document.createElement('span');\n      container.setAttribute('data-paper-ripple', '');\n      (0, _extends2.default)(container.style, {\n        position: 'absolute',\n        pointerEvents: 'none',\n        top: '0',\n        left: '0',\n        right: '0',\n        bottom: '0',\n        borderTopLeftRadius: style.borderTopLeftRadius,\n        borderTopRightRadius: style.borderTopRightRadius,\n        borderBottomRightRadius: style.borderBottomRightRadius,\n        borderBottomLeftRadius: style.borderBottomLeftRadius,\n        overflow: centered ? 'visible' : 'hidden'\n      });\n      var ripple = document.createElement('span');\n      (0, _extends2.default)(ripple.style, {\n        position: 'absolute',\n        pointerEvents: 'none',\n        backgroundColor: calculatedRippleColor,\n        borderRadius: '50%',\n        transitionProperty: 'transform opacity',\n        transitionDuration: \"\".concat(Math.min(size * 1.5, 350), \"ms\"),\n        transitionTimingFunction: 'linear',\n        transformOrigin: 'center',\n        transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n        opacity: '0.5',\n        left: \"\".concat(touchX, \"px\"),\n        top: \"\".concat(touchY, \"px\"),\n        width: \"\".concat(size, \"px\"),\n        height: \"\".concat(size, \"px\")\n      });\n      container.appendChild(ripple);\n      button.appendChild(container);\n      requestAnimationFrame(function () {\n        requestAnimationFrame(function () {\n          (0, _extends2.default)(ripple.style, {\n            transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n            opacity: '1'\n          });\n        });\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handlePressOut\", function (e) {\n      _this.props.onPressOut && _this.props.onPressOut(e);\n      var containers = e.currentTarget.querySelectorAll('[data-paper-ripple]');\n      requestAnimationFrame(function () {\n        requestAnimationFrame(function () {\n          containers.forEach(function (container) {\n            var ripple = container.firstChild;\n            (0, _extends2.default)(ripple.style, {\n              transitionDuration: '250ms',\n              opacity: 0\n            });\n            setTimeout(function () {\n              var parentNode = container.parentNode;\n\n              if (parentNode) {\n                parentNode.removeChild(container);\n              }\n            }, 500);\n          });\n        });\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(TouchableRipple, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          background = _this$props2.background,\n          borderless = _this$props2.borderless,\n          disabledProp = _this$props2.disabled,\n          rippleColor = _this$props2.rippleColor,\n          underlayColor = _this$props2.underlayColor,\n          children = _this$props2.children,\n          theme = _this$props2.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props2, [\"style\", \"background\", \"borderless\", \"disabled\", \"rippleColor\", \"underlayColor\", \"children\", \"theme\"]);\n      var disabled = disabledProp || !this.props.onPress;\n      return React.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({}, rest, {\n        onPressIn: this.handlePressIn,\n        onPressOut: this.handlePressOut,\n        disabled: disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        }\n      }), React.createElement(_reactNative.View, {\n        style: [styles.touchable, borderless && styles.borderless, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        }\n      }, React.Children.only(children)));\n    }\n  }]);\n  return TouchableRipple;\n}(React.Component);\n\n(0, _defineProperty2.default)(TouchableRipple, \"defaultProps\", {\n  borderless: false\n});\n(0, _defineProperty2.default)(TouchableRipple, \"supported\", true);\n\nvar styles = _reactNative.StyleSheet.create({\n  touchable: {\n    position: 'relative'\n  },\n  borderless: {\n    overflow: 'hidden'\n  }\n});\n\nvar _default = (0, _theming.withTheme)(TouchableRipple);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}