{"ast":null,"code":"import _slicedToArray from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/src/Components/SearchResult/SearchResult.js\";\nimport React, { Component } from \"react\";\nimport Item from \"../Item/Item\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport queryString from \"query-string\"; // import Api from \"../../Api\";\n\nimport Paging from \"../Paging/Paging\";\nimport ProductsHeader from \"../ProductsHeader/ProductsHeader\";\nimport API from '../../helpers/api.js';\nimport cookie from \"react-cookies\";\n\nvar SearchResult =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchResult, _Component);\n\n  function SearchResult(props) {\n    var _this;\n\n    _classCallCheck(this, SearchResult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchResult).call(this, props));\n    _this.state = {\n      loading: false,\n      totalItemsCount: null,\n      searchResult: [],\n      search: '',\n      userID: cookie.load(\"userId\")\n    };\n    _this.updateQueryString = _this.updateQueryString.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SearchResult, [{\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(currentQS) {\n        var _this2 = this;\n\n        var results, query;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                results = []; // currentQS.uid = this.state.userID || '';\n\n                console.log(currentQS);\n                query = {};\n                query.search = currentQS.search;\n                query.uid = this.state.userID; // Make the request to get items\n\n                API.get('/search_recipes', currentQS).then(function (res) {\n                  if (res) {\n                    results = res.data.rows;\n\n                    _this2.setState({\n                      searchResult: results,\n                      loading: false,\n                      totalItemsCount: results.length\n                    });\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData(_x) {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"updateQueryString\",\n    value: function updateQueryString(newValues) {\n      // Create new query string by merging with old one\n      window.location.reload();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var currentQS = queryString.parse(this.props.location.search);\n      var oldQS = queryString.parse(prevProps.location.search);\n      console.log(oldQS, currentQS); // Check if the query strings changed.\n\n      var check1 = Object.entries(currentQS).some(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            k = _ref2[0],\n            v = _ref2[1];\n\n        return v !== oldQS[k];\n      });\n      var check2 = Object.entries(oldQS).some(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            k = _ref4[0],\n            v = _ref4[1];\n\n        return v !== currentQS[k];\n      });\n      var isDifferent = check1 || check2; // We will refetch products only when query string changes.\n\n      if (isDifferent) {\n        this.fetchData(currentQS);\n        this.setState({\n          search: currentQS.search\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var parsedQS = queryString.parse(this.props.location.search); // Check if products are loading ...\n\n      if (this.state.loading) {\n        return React.createElement(CircularProgress, {\n          className: \"circular\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: 'center',\n          marginBottom: '10%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ProductsHeader, {\n        parsedQS: parsedQS,\n        updateQueryString: this.updateQueryString,\n        totalItemsCount: this.state.totalItemsCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '2%',\n          paddingTop: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginTop: 30,\n          marginBottom: 10,\n          color: \"gray\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Search Result of \", this.state.search), React.createElement(\"div\", {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.searchResult.map(function (item) {\n        return React.createElement(Item, {\n          key: item.recipeID,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        });\n      })))));\n    }\n  }]);\n\n  return SearchResult;\n}(Component);\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/vincentchan/Documents/GitHub/pj-recommender-website/src/Components/SearchResult/SearchResult.js"],"names":["React","Component","Item","CircularProgress","queryString","Paging","ProductsHeader","API","cookie","SearchResult","props","state","loading","totalItemsCount","searchResult","search","userID","load","updateQueryString","bind","currentQS","setState","results","console","log","query","uid","get","then","res","data","rows","length","catch","err","fetchData","newValues","window","location","reload","prevProps","prevState","snapshot","parse","oldQS","check1","Object","entries","some","k","v","check2","isDifferent","parsedQS","height","display","flexDirection","alignItems","marginBottom","padding","paddingTop","marginTop","color","fontSize","flex","map","item","recipeID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Item from \"../Item/Item\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport queryString from \"query-string\";\n// import Api from \"../../Api\";\nimport Paging from \"../Paging/Paging\";\nimport ProductsHeader from \"../ProductsHeader/ProductsHeader\"\nimport API from '../../helpers/api.js'\nimport cookie from \"react-cookies\";\n\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading         : false,\n      totalItemsCount : null,\n      searchResult : [],\n      search : '',\n      userID: cookie.load(\"userId\")\n    };\n    \n    this.updateQueryString = this.updateQueryString.bind(this);\n\n  }\n\n  async fetchData(currentQS) {\n\n    this.setState({ loading: true });\n\n    let results = [];\n    // currentQS.uid = this.state.userID || '';\n    console.log(currentQS);\n    var query = {};\n    query.search = currentQS.search;\n    query.uid = this.state.userID;\n\n    \n    // Make the request to get items\n    API.get('/search_recipes', currentQS)\n    .then((res) => {\n      if (res) {\n        results = res.data.rows;\n        this.setState({\n            searchResult: results,\n            loading: false,\n            totalItemsCount: results.length\n        });\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  updateQueryString(newValues) {\n    // Create new query string by merging with old one\n    window.location.reload();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    let currentQS = queryString.parse(this.props.location.search);\n    let oldQS = queryString.parse(prevProps.location.search)\nconsole.log(oldQS, currentQS);\n\n    // Check if the query strings changed.\n    let check1 = Object.entries(currentQS).some(([k, v]) => v !== oldQS[k]);\n    let check2 = Object.entries(oldQS).some(([k, v]) => v !== currentQS[k]);\n    let isDifferent = check1 || check2;\n\n    // We will refetch products only when query string changes.\n    if (isDifferent) {\n      this.fetchData(currentQS);\n      this.setState({search : currentQS.search})\n    }\n  }\n\n  render() {\n    let parsedQS = queryString.parse(this.props.location.search);\n\n    // Check if products are loading ...\n    if (this.state.loading) {\n      return (\n        <CircularProgress className=\"circular\" />\n      );\n    }\n\n    return (\n      <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", alignItems : 'center', marginBottom : '10%' }}>\n        <ProductsHeader\n          parsedQS={parsedQS}\n          updateQueryString={this.updateQueryString}\n          totalItemsCount={this.state.totalItemsCount} \n          />\n          <div style = {{padding : '2%', paddingTop : 0}}>\n\n\n          <div>\n            <div\n              style={{\n                marginTop: 30,\n                marginBottom: 10,\n                color: \"gray\",\n                fontSize: 20\n              }}\n            >\n              Search Result of {this.state.search}\n            </div>\n            <div style={{ flex: 1 }}>\n              {this.state.searchResult.map(item => {            \n                return <Item key={item.recipeID} item={item} />;\n              })}\n            </div>\n          </div>\n\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}