{"ast":null,"code":"import _classCallCheck from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincentchan/Documents/GitHub/pj-recommender-website/src/Components/ProductsHeader/ProductsHeader.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PriceDialog from \"../PriceDialog/PriceDialog\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nvar ProductsHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductsHeader, _Component);\n\n  function ProductsHeader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProductsHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProductsHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      openPriceDialog: false\n    };\n    return _this;\n  }\n\n  _createClass(ProductsHeader, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      var pageTitle = \"Search results\";\n      var categoryName = queryString.parse(this.props.location.search).category;\n      var itemCategoryClicked = queryString.parse(this.props.location.search).itemCategoryClicked === \"true\";\n\n      if (!categoryName) {\n        pageTitle = \"Welcome\";\n      } else if (itemCategoryClicked) {\n        pageTitle = categoryName;\n      }\n\n      return pageTitle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          parsedQS = _this$props.parsedQS,\n          totalItemsCount = _this$props.totalItemsCount,\n          updateQueryString = _this$props.updateQueryString;\n      var usePriceFilter = parsedQS.usePriceFilter === \"true\";\n      var minPrice = parsedQS.minPrice || 0;\n      var maxPrice = parsedQS.maxPrice || 1000;\n      var sortValue = parsedQS.sortValue || \"lh\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          padding: 10,\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          fontSize: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, 'Home'), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"gray\",\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Total results found: \", totalItemsCount))), React.createElement(PriceDialog, {\n        open: this.state.openPriceDialog,\n        min: minPrice,\n        max: maxPrice,\n        onSave: function onSave(min, max) {\n          _this2.setState({\n            openPriceDialog: false\n          });\n\n          updateQueryString({\n            minPrice: min,\n            maxPrice: max,\n            page: 1\n          });\n        },\n        onClose: function onClose() {\n          return _this2.setState({\n            openPriceDialog: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProductsHeader;\n}(Component);\n\nexport default withRouter(ProductsHeader);","map":{"version":3,"sources":["/Users/vincentchan/Documents/GitHub/pj-recommender-website/src/Components/ProductsHeader/ProductsHeader.js"],"names":["React","Component","Button","Tooltip","PriceDialog","MenuItem","Select","FormControlLabel","Checkbox","withRouter","queryString","ProductsHeader","state","openPriceDialog","pageTitle","categoryName","parse","props","location","search","category","itemCategoryClicked","parsedQS","totalItemsCount","updateQueryString","usePriceFilter","minPrice","maxPrice","sortValue","padding","display","alignItems","flex","fontSize","color","marginTop","min","max","setState","page"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PriceDialog from \"../PriceDialog/PriceDialog\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nclass ProductsHeader extends Component {\n\n    state = {\n        openPriceDialog: false,\n    };\n\n\n    getTitle() {\n        let pageTitle = \"Search results\";\n        let categoryName = queryString.parse(this.props.location.search).category;\n        let itemCategoryClicked = queryString.parse(this.props.location.search).itemCategoryClicked === \"true\";\n\n        if (!categoryName) {\n            pageTitle = \"Welcome\";\n        } else if (itemCategoryClicked) {\n            pageTitle = categoryName;\n        }\n        return pageTitle;\n    }\n\n    render() {\n        let { parsedQS, totalItemsCount, updateQueryString } = this.props;\n        let usePriceFilter = parsedQS.usePriceFilter === \"true\";\n        let minPrice = parsedQS.minPrice || 0;\n        let maxPrice = parsedQS.maxPrice || 1000;\n        let sortValue = parsedQS.sortValue || \"lh\";\n\n        return (\n            <div>\n                <div style={{ padding: 10, display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ flex: 1, fontSize: 24 }}>\n                        <div>{'Home'}</div>\n                        <div style={{ fontSize: 12, color: \"gray\", marginTop: 5 }}>\n                            Total results found: {totalItemsCount}\n                        </div>\n                    </div>\n\n                    {/* <FormControlLabel\n                        control={\n                            <Checkbox\n                                color=\"primary\"\n                                checked={usePriceFilter}\n                                onChange={e => {\n                                    updateQueryString(\n                                        { usePriceFilter: e.target.checked, page: 1 }\n                                    );\n                                }}\n                            />\n                        }\n                        label=\"Filter by price\"\n                    /> */}\n                    {/* {usePriceFilter && (\n                        <Tooltip title=\"Click to change range\" disableFocusListener>\n                            <Button\n                                variant=\"outlined\"\n                                style={{ marginRight: 20 }}\n                                onClick={() => {\n                                    this.setState({\n                                        openPriceDialog: true\n                                    });\n                                }}\n                            >\n                                {minPrice +\n                                    \"$ - \" +\n                                    maxPrice +\n                                    \"$\"}\n                            </Button>\n                        </Tooltip>\n                    )}\n                    <Select\n                        value={sortValue}\n                        onChange={e => {\n                            updateQueryString({ sortValue: e.target.value });\n                        }}\n                    >\n                        <MenuItem value={\"lh\"}>\n                            Sort by price: low to high\n                        </MenuItem>\n                        <MenuItem value={\"hl\"}>\n                            Sort by price: high to low\n                        </MenuItem>\n\n                    </Select> */}\n                </div>\n\n                {/* This is dialog which opens up for setting price filter */}\n                <PriceDialog\n                    open={this.state.openPriceDialog}\n                    min={minPrice}\n                    max={maxPrice}\n                    onSave={(min, max) => {\n                        this.setState({ openPriceDialog: false });\n                        updateQueryString({ minPrice: min, maxPrice: max, page: 1 });\n                    }}\n                    onClose={() =>\n                        this.setState({\n                            openPriceDialog: false\n                        })\n                    }\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(ProductsHeader);\n"]},"metadata":{},"sourceType":"module"}