{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CheckboxIOS = exports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Checkbox/CheckboxIOS.tsx\";\n\nvar CheckboxIOS = function (_React$Component) {\n  (0, _inherits2.default)(CheckboxIOS, _React$Component);\n\n  function CheckboxIOS() {\n    (0, _classCallCheck2.default)(this, CheckboxIOS);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CheckboxIOS).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(CheckboxIOS, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          status = _this$props.status,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"status\", \"disabled\", \"onPress\", \"theme\"]);\n      var checked = status === 'checked';\n      var indeterminate = status === 'indeterminate';\n      var checkedColor = disabled ? theme.colors.disabled : this.props.color || theme.colors.accent;\n      var rippleColor;\n\n      if (disabled) {\n        rippleColor = (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();\n      } else {\n        rippleColor = (0, _color.default)(checkedColor).fade(0.32).rgb().string();\n      }\n\n      var icon = indeterminate ? 'minus' : 'check';\n      return React.createElement(_TouchableRipple.default, (0, _extends2.default)({}, rest, {\n        borderless: true,\n        rippleColor: rippleColor,\n        onPress: onPress,\n        disabled: disabled,\n        accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        accessibilityStates: disabled ? ['disabled'] : [],\n        accessibilityLiveRegion: \"polite\",\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }), React.createElement(_reactNative.View, {\n        style: {\n          opacity: indeterminate || checked ? 1 : 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, React.createElement(_MaterialCommunityIcon.default, {\n        allowFontScaling: false,\n        name: icon,\n        size: 24,\n        color: checkedColor,\n        direction: \"ltr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      })));\n    }\n  }]);\n  return CheckboxIOS;\n}(React.Component);\n\nexports.CheckboxIOS = CheckboxIOS;\n(0, _defineProperty2.default)(CheckboxIOS, \"displayName\", 'Checkbox.IOS');\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\n\nvar _default = (0, _theming.withTheme)(CheckboxIOS);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}