{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _IconButton = _interopRequireDefault(require(\"./IconButton\"));\n\nvar _Surface = _interopRequireDefault(require(\"./Surface\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"./MaterialCommunityIcon\"));\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Searchbar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar Searchbar = function (_React$Component) {\n  (0, _inherits2.default)(Searchbar, _React$Component);\n\n  function Searchbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Searchbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Searchbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleClearPress\", function () {\n      _this.clear();\n\n      _this.props.onChangeText && _this.props.onChangeText('');\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"root\", void 0);\n    return _this;\n  }\n\n  (0, _createClass2.default)(Searchbar, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(args) {\n      return this.root && this.root.setNativeProps(args);\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.root && this.root.isFocused();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return this.root && this.root.clear();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      return this.root && this.root.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      return this.root && this.root.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          clearAccessibilityLabel = _this$props.clearAccessibilityLabel,\n          clearIcon = _this$props.clearIcon,\n          icon = _this$props.icon,\n          customIconColor = _this$props.iconColor,\n          inputStyle = _this$props.inputStyle,\n          onIconPress = _this$props.onIconPress,\n          placeholder = _this$props.placeholder,\n          searchAccessibilityLabel = _this$props.searchAccessibilityLabel,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          value = _this$props.value,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"clearAccessibilityLabel\", \"clearIcon\", \"icon\", \"iconColor\", \"inputStyle\", \"onIconPress\", \"placeholder\", \"searchAccessibilityLabel\", \"style\", \"theme\", \"value\"]);\n      var colors = theme.colors,\n          roundness = theme.roundness,\n          dark = theme.dark,\n          fonts = theme.fonts;\n      var textColor = colors.text;\n      var font = fonts.regular;\n      var iconColor = customIconColor || (dark ? textColor : (0, _color.default)(textColor).alpha(0.54).rgb().string());\n      var rippleColor = (0, _color.default)(textColor).alpha(0.32).rgb().string();\n      return React.createElement(_Surface.default, {\n        style: [{\n          borderRadius: roundness,\n          elevation: 4\n        }, styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        }\n      }, React.createElement(_IconButton.default, {\n        accessibilityTraits: \"button\",\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        borderless: true,\n        rippleColor: rippleColor,\n        onPress: onIconPress,\n        color: iconColor,\n        icon: icon || function (_ref) {\n          var size = _ref.size,\n              color = _ref.color;\n          return React.createElement(_MaterialCommunityIcon.default, {\n            name: \"magnify\",\n            color: color,\n            size: size,\n            direction: _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            }\n          });\n        },\n        accessibilityLabel: searchAccessibilityLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      }), React.createElement(_reactNative.TextInput, (0, _extends2.default)({\n        style: [styles.input, _objectSpread({\n          color: textColor\n        }, font), inputStyle],\n        placeholder: placeholder || '',\n        placeholderTextColor: colors.placeholder,\n        selectionColor: colors.primary,\n        underlineColorAndroid: \"transparent\",\n        returnKeyType: \"search\",\n        keyboardAppearance: dark ? 'dark' : 'light',\n        accessibilityTraits: \"search\",\n        accessibilityRole: \"search\",\n        ref: function ref(c) {\n          _this2.root = c;\n        },\n        value: value\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        }\n      })), React.createElement(_IconButton.default, {\n        borderless: true,\n        disabled: !value,\n        accessibilityLabel: clearAccessibilityLabel,\n        color: value ? iconColor : 'rgba(255, 255, 255, 0)',\n        rippleColor: rippleColor,\n        onPress: this.handleClearPress,\n        icon: clearIcon || function (_ref2) {\n          var size = _ref2.size,\n              color = _ref2.color;\n          return React.createElement(_MaterialCommunityIcon.default, {\n            name: \"close\",\n            color: color,\n            size: size,\n            direction: _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            }\n          });\n        },\n        accessibilityTraits: \"button\",\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        }\n      }));\n    }\n  }]);\n  return Searchbar;\n}(React.Component);\n\n(0, _defineProperty2.default)(Searchbar, \"defaultProps\", {\n  searchAccessibilityLabel: 'search',\n  clearAccessibilityLabel: 'clear'\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Searchbar);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}