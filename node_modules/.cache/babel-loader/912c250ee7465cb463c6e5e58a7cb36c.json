{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MenuItem = exports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _colors = require(\"../../styles/colors\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Menu/MenuItem.tsx\";\n\nvar MenuItem = function (_React$Component) {\n  (0, _inherits2.default)(MenuItem, _React$Component);\n\n  function MenuItem() {\n    (0, _classCallCheck2.default)(this, MenuItem);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MenuItem).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(MenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          title = _this$props.title,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          testID = _this$props.testID,\n          titleStyle = _this$props.titleStyle;\n      var disabledColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.32).rgb().string();\n      var titleColor = disabled ? disabledColor : (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();\n      var iconColor = disabled ? disabledColor : (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();\n      return React.createElement(_TouchableRipple.default, {\n        style: [styles.container, style],\n        onPress: onPress,\n        disabled: disabled,\n        testID: testID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, React.createElement(_reactNative.View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, icon ? React.createElement(_reactNative.View, {\n        style: [styles.item, styles.icon],\n        pointerEvents: \"box-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, React.createElement(_Icon.default, {\n        source: icon,\n        size: 24,\n        color: iconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      })) : null, React.createElement(_reactNative.View, {\n        style: [styles.item, styles.content, icon ? styles.widthWithIcon : null],\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, React.createElement(_Text.default, {\n        numberOfLines: 1,\n        style: [styles.title, {\n          color: titleColor\n        }, titleStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      }, title))));\n    }\n  }]);\n  return MenuItem;\n}(React.Component);\n\nexports.MenuItem = MenuItem;\n(0, _defineProperty2.default)(MenuItem, \"displayName\", 'Menu.Item');\nvar minWidth = 112;\nvar maxWidth = 280;\nvar iconWidth = 40;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth: minWidth,\n    maxWidth: maxWidth,\n    height: 48,\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  icon: {\n    width: iconWidth\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48)\n  }\n});\n\nvar _default = (0, _theming.withTheme)(MenuItem);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}