{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../core/theming\");\n\nvar _colors = require(\"../styles/colors\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Divider.tsx\";\n\nvar Divider = function (_React$Component) {\n  (0, _inherits2.default)(Divider, _React$Component);\n\n  function Divider() {\n    (0, _classCallCheck2.default)(this, Divider);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Divider).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(Divider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          inset = _this$props.inset,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"inset\", \"style\", \"theme\"]);\n      var isDarkTheme = theme.dark;\n      return React.createElement(_reactNative.View, (0, _extends2.default)({}, rest, {\n        style: [isDarkTheme ? styles.dark : styles.light, inset && styles.inset, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }));\n    }\n  }]);\n  return Divider;\n}(React.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  light: {\n    backgroundColor: (0, _color.default)(_colors.black).alpha(0.12).rgb().string(),\n    height: _reactNative.StyleSheet.hairlineWidth\n  },\n  dark: {\n    backgroundColor: (0, _color.default)(_colors.white).alpha(0.12).rgb().string(),\n    height: _reactNative.StyleSheet.hairlineWidth\n  },\n  inset: {\n    marginLeft: 72\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Divider);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}