{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _Portal = _interopRequireDefault(require(\"../Portal/Portal\"));\n\nvar _Surface = _interopRequireDefault(require(\"../Surface\"));\n\nvar _MenuItem2 = _interopRequireDefault(require(\"./MenuItem\"));\n\nvar _constants = require(\"../../constants\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Menu/Menu.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\n\nvar EASING = _reactNative.Easing.bezier(0.4, 0, 0.2, 1);\n\nvar Menu = function (_React$Component) {\n  (0, _inherits2.default)(Menu, _React$Component);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      rendered: _this.props.visible,\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new _reactNative.Animated.Value(0),\n      scaleAnimation: new _reactNative.Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"anchor\", null);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"menu\", null);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"isAnchorCoord\", function () {\n      return !React.isValidElement(_this.props.anchor);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"measureMenuLayout\", function () {\n      return new Promise(function (resolve) {\n        if (_this.menu) {\n          _this.menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"measureAnchorLayout\", function () {\n      return new Promise(function (resolve) {\n        var anchor = _this.props.anchor;\n\n        if (_this.isAnchorCoord()) {\n          resolve({\n            x: anchor.x,\n            y: anchor.y,\n            width: 0,\n            height: 0\n          });\n          return;\n        }\n\n        if (_this.anchor) {\n          _this.anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"updateVisibility\", function _callee() {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(Promise.resolve());\n\n            case 2:\n              if (_this.props.visible) {\n                _this.show();\n              } else {\n                _this.hide();\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"isBrowser\", function () {\n      return _reactNative.Platform.OS === 'web' && 'document' in global;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"focusFirstDOMNode\", function (el) {\n      if (el && _this.isBrowser()) {\n        var node = (0, _reactNative.findNodeHandle)(el);\n        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        focusableNode === null || focusableNode === void 0 ? void 0 : focusableNode.focus();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleDismiss\", function () {\n      if (_this.props.visible) {\n        _this.props.onDismiss();\n      }\n\n      return true;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleKeypress\", function (e) {\n      if (e.key === 'Escape') {\n        _this.props.onDismiss();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attachListeners\", function () {\n      _reactNative.BackHandler.addEventListener('hardwareBackPress', _this.handleDismiss);\n\n      _reactNative.Dimensions.addEventListener('change', _this.handleDismiss);\n\n      _this.isBrowser() && document.addEventListener('keyup', _this.handleKeypress);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"removeListeners\", function () {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', _this.handleDismiss);\n\n      _reactNative.Dimensions.removeEventListener('change', _this.handleDismiss);\n\n      _this.isBrowser() && document.removeEventListener('keyup', _this.handleKeypress);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"show\", function _callee2() {\n      var windowLayout, _ref, _ref2, menuLayout, anchorLayout;\n\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              windowLayout = _reactNative.Dimensions.get('window');\n              _context2.next = 3;\n              return _regenerator.default.awrap(Promise.all([_this.measureMenuLayout(), _this.measureAnchorLayout()]));\n\n            case 3:\n              _ref = _context2.sent;\n              _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n              menuLayout = _ref2[0];\n              anchorLayout = _ref2[1];\n\n              if (!(!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this.isAnchorCoord() || !anchorLayout.height && !_this.isAnchorCoord())) {\n                _context2.next = 10;\n                break;\n              }\n\n              requestAnimationFrame(_this.show);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState(function () {\n                return {\n                  left: anchorLayout.x,\n                  top: anchorLayout.y,\n                  anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width\n                  },\n                  menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height\n                  }\n                };\n              }, function () {\n                _this.attachListeners();\n\n                var animation = _this.props.theme.animation;\n\n                _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), _reactNative.Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start(function (_ref3) {\n                  var finished = _ref3.finished;\n\n                  if (finished) {\n                    _this.focusFirstDOMNode(_this.menu);\n                  }\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"hide\", function () {\n      _this.removeListeners();\n\n      var animation = _this.props.theme.animation;\n\n      _reactNative.Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION * animation.scale,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (finished) {\n        if (finished) {\n          _this.setState({\n            menuLayout: {\n              width: 0,\n              height: 0\n            },\n            rendered: false\n          });\n\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this.focusFirstDOMNode(_this.anchor);\n        }\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          anchor = _this$props.anchor,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          statusBarHeight = _this$props.statusBarHeight,\n          onDismiss = _this$props.onDismiss;\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n\n      var additionalVerticalValue = _reactNative.Platform.select({\n        android: statusBarHeight,\n        default: 0\n      });\n\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n\n      var windowLayout = _reactNative.Dimensions.get('window');\n\n      var positionTransforms = [];\n\n      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right > windowLayout.width - SCREEN_INDENT) {\n          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      var scrollableMenuHeight = 0;\n\n      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {\n        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n      }\n\n      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;\n\n      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]\n          })\n        });\n\n        if (top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]\n          })\n        });\n        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n        if (bottom > windowLayout.height - SCREEN_INDENT) {\n          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = _objectSpread({\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: theme.roundness\n      }, scrollableMenuHeight ? {\n        height: scrollableMenuHeight\n      } : {});\n\n      var positionStyle = _objectSpread({\n        top: this.isAnchorCoord() ? top : top + additionalVerticalValue\n      }, _reactNative.I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return React.createElement(_reactNative.View, {\n        ref: function ref(_ref5) {\n          _this2.anchor = _ref5;\n        },\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        }\n      }, this.isAnchorCoord() ? null : anchor, rendered ? React.createElement(_Portal.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        }\n      }, React.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        }\n      }, React.createElement(_reactNative.View, {\n        style: _reactNative.StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        }\n      })), React.createElement(_reactNative.View, {\n        ref: function ref(_ref4) {\n          _this2.menu = _ref4;\n        },\n        collapsable: false,\n        accessibilityViewIsModal: visible,\n        style: [styles.wrapper, positionStyle, style],\n        pointerEvents: visible ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        }\n      }, React.createElement(_reactNative.Animated.View, {\n        style: {\n          transform: positionTransforms\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        }\n      }, React.createElement(_Surface.default, {\n        style: [styles.shadowMenuContainer, shadowMenuContainerStyle, contentStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        }\n      }, scrollableMenuHeight && React.createElement(_reactNative.ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        }\n      }, children) || React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        }\n      }, children))))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return Menu;\n}(React.Component);\n\n(0, _defineProperty2.default)(Menu, \"Item\", _MenuItem2.default);\n(0, _defineProperty2.default)(Menu, \"defaultProps\", {\n  statusBarHeight: _constants.APPROX_STATUSBAR_HEIGHT\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Menu);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}