{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _colors = require(\"../styles/colors\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Switch.tsx\";\nvar version = _reactNative.NativeModules.PlatformConstants ? _reactNative.NativeModules.PlatformConstants.reactNativeVersion : undefined;\n\nvar Switch = function (_React$Component) {\n  (0, _inherits2.default)(Switch, _React$Component);\n\n  function Switch() {\n    (0, _classCallCheck2.default)(this, Switch);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(Switch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          disabled = _this$props.disabled,\n          onValueChange = _this$props.onValueChange,\n          color = _this$props.color,\n          theme = _this$props.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"value\", \"disabled\", \"onValueChange\", \"color\", \"theme\"]);\n      var checkedColor = color || theme.colors.accent;\n      var onTintColor = _reactNative.Platform.OS === 'ios' ? checkedColor : disabled ? theme.dark ? (0, _color.default)(_colors.white).alpha(0.1).rgb().string() : (0, _color.default)(_colors.black).alpha(0.12).rgb().string() : (0, _color.default)(checkedColor).alpha(0.5).rgb().string();\n      var thumbTintColor = _reactNative.Platform.OS === 'ios' ? undefined : disabled ? theme.dark ? _colors.grey800 : _colors.grey400 : value ? checkedColor : theme.dark ? _colors.grey400 : _colors.grey50;\n      var props = version && version.major === 0 && version.minor <= 56 ? {\n        onTintColor: onTintColor,\n        thumbTintColor: thumbTintColor\n      } : {\n        thumbColor: thumbTintColor,\n        trackColor: {\n          true: onTintColor,\n          false: ''\n        }\n      };\n      return React.createElement(_reactNative.Switch, (0, _extends2.default)({\n        value: value,\n        disabled: disabled,\n        onValueChange: disabled ? undefined : onValueChange\n      }, props, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        }\n      }));\n    }\n  }]);\n  return Switch;\n}(React.Component);\n\nvar _default = (0, _theming.withTheme)(Switch);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}